@page "/"
@using TheoryProtocol.Components.Layout
@using TheoryProtocol.Models
@inject UserService us

<PageTitle>Home</PageTitle>

@if (!SummaryIsShown)
{
    <MudText Align="Align.Center" Typo="Typo.h1">Index</MudText>
    <MudPaper Class="d-flex justify-center align-start flex-grow-1 gap-4" Elevation="0">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="width: 300px" @onclick="Click">Open to see the latest stories!</MudButton>
    </MudPaper>
}
else
{
    
    <Summary></Summary>
    <h1>@SummaryId</h1>
}
<ul>
        @foreach (var item in users)
        {
            <li>
                <br/> <b>@item.Username</b>
            </li>
        }
    </ul>

@code
{
    [CascadingParameter]
    public MainLayout MainLayout { get; set; }
    [Parameter] public bool SummaryIsShown { get; set; } = true;
    [Parameter] public EventCallback<bool> SummaryIsShownChanged { get; set; }
    public int SummaryId { get; set; }
    private List<User> users = new List<User>();
    
    async Task Click()
    {
        await MainLayout.drawerComponent.DrawerToggle();
    }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        users = await us.GetUsers();
    }
}